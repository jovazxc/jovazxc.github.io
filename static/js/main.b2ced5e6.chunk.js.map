{"version":3,"sources":["Home.js","Registrar.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","contactos","nombre","presentarme","contacto","split","msg","encodeURI","window","open","telefono","preguntar","programa","whatsapp","regreso","borrar","d","Array","from","filter","c","setState","localStorage","setItem","JSON","stringify","renderContactos","toLowerCase","startsWith","map","k","className","key","onClick","getItem","this","parse","id","to","value","onChange","e","target","placeholder","length","location","reload","React","Component","Registrar","back","props","history","goBack","registrar","unshift","alert","telefonoCambio","t","nombreCambio","programaCambio","class","type","withRouter","App","style","color","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b2ced5e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        contactos: [],\r\n        nombre: '',\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('contactos') === null) localStorage.setItem('contactos', JSON.stringify([]))\r\n\r\n        this.setState({\r\n            contactos: JSON.parse(localStorage.getItem('contactos'))\r\n        })\r\n\r\n    }\r\n\r\n    presentarme = (contacto) => {\r\n        let nombre = contacto.nombre.split(' ')[0];\r\n        let msg = encodeURI(`Buenos días ${nombre}, soy Diana Mendoza de Ludus Magnus, cómo estás?`)\r\n        window.open(`https://wa.me/521${contacto.telefono}?text=${msg}`)\r\n    }\r\n    preguntar = (contacto) => {\r\n        let msg = encodeURI(`Me da gusto, espero que te encuentres bien. La razón por la que nos comunicamos contigo es porque nos gustaría saber el motivo por el cual interrumpiste tu proceso y ver en qué podemos ayudarte para que regreses a tu programa ${contacto.programa}`)\r\n        window.open(`https://wa.me/521${contacto.telefono}?text=${msg}`)\r\n    }\r\n\r\n    whatsapp = (contacto) => {\r\n        window.open(`https://wa.me/521${contacto.telefono}`)\r\n    }\r\n\t\r\n\tregreso = (contacto) => {\r\n\t\tlet nombre = contacto.nombre.split(' ')[0];\r\n\t\tlet msg = encodeURI(`¡ESTAMOS DE VUELTA!\r\n\r\nA partir del Lunes 7 de Septiembre, podrás entrenar en Sucursal Tierra Blanca, es necesario:\r\n\r\n- Agendar tu horario de entrenamiento al teléfono 7121811\r\n\r\n- Llegar 10 minutos antes de tu clase y esperar afuera de las instalaciones.\r\n\r\n- Portar siempre cubrebocas desde el ingreso a las instalaciones, durante el entrenamiento y al salir (de lo contrario, no podremos recibirte).\r\n\r\n- Llegar listo(a) para entrenar ya que los probadores se mantendrán cerrados.\r\n\r\n- Evitar el contacto o saludos.\r\n\r\n- Asistir sin ningún acompañante (no niños).\r\n\r\n- Si tienes algún malestar, favor de no asistir por respeto a los demás.\r\n\r\n- No permanecer en las instalaciones una vez terminado tu entrenamiento.\r\n\r\n\r\n\r\nHorarios de entrenamientos:\r\n\r\n6 am, 7 am, 8 am, 9 am, 5 pm, 6 pm, 7 pm y 8 pm. Las clases tendrán duración de 45 minutos.\r\n\r\n\r\nCualquier duda estamos a tus órdenes.`);\r\n\t\twindow.open(`https://wa.me/521${contacto.telefono}?text=${msg}`)\r\n\t}\r\n\t\r\n\t\r\n    borrar = (d) => {\r\n        const contactos = Array.from(this.state.contactos).filter(c => {\r\n            return !(c.nombre === d.nombre && c.telefono === d.telefono && c.programa === d.programa)\r\n        })\r\n\r\n        this.setState({ contactos })\r\n        localStorage.setItem('contactos', JSON.stringify(contactos))\r\n    }\r\n\r\n    renderContactos = () => this.state.contactos.filter(contacto =>\r\n        contacto.nombre.toLowerCase().startsWith(this.state.nombre.toLowerCase())\r\n    ).map((contacto, k) =>\r\n        <div className=\"contacto\" key={contacto.telefono}>\r\n            <div className=\"nombre\">\r\n                {contacto.nombre} | {contacto.telefono} | {contacto.programa}\r\n            </div>\r\n\r\n            <button className=\"button presentarme\" onClick={() => this.presentarme(contacto)}>presentarme</button>\r\n            <button className=\"button preguntar\" onClick={() => this.preguntar(contacto)}>preguntar</button>\r\n            <button className=\"button presentarme\" onClick={() => this.regreso(contacto)}>regreso</button>\r\n\t\t\t<button className=\"button whatsapp\" onClick={() => this.whatsapp(contacto)}>ws</button>\r\n\t\t\t\r\n            <button className=\"button peligro\" onClick={() => this.borrar(contacto)}>borrar</button>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <p id=\"welcome\">Bienvenida Diana</p>\r\n\r\n                <div className=\"title\">\r\n                    <Link to=\"/registrar\">\r\n                        <button className=\"button\">Registrar</button>\r\n                    </Link>\r\n                </div>\r\n\r\n\r\n                <input\r\n                    value={this.state.nombre}\r\n                    onChange={(e) => this.setState({ nombre: e.target.value })}\r\n                    className=\"inputText upMargin\"\r\n                    placeholder=\"filtrar por nombre\" />\r\n\r\n                <div className=\"contactos\">\r\n                    {this.state.contactos.length === 0 ? 'no tienes contactos' : this.renderContactos()}\r\n                </div>\r\n\t\t\t\t\r\n\t\t\t\t<button className=\"button whatsapp\" onClick={() => window.location.reload(true)}>actualizar</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport {\r\n    withRouter,\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass Registrar extends React.Component {\r\n    state = {\r\n        nombre: '',\r\n        telefono: '',\r\n        programa: '22/22'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.contactos = JSON.parse(localStorage.getItem('contactos'))\r\n    }\r\n\r\n\r\n    back = () => {\r\n        this.props.history.goBack()\r\n\r\n    }\r\n\r\n    registrar = () => {\r\n        if (this.state.telefono === '') {\r\n            alert('Ingresa un telefono')\r\n            return;\r\n        }\r\n        if (this.state.nombre === '') {\r\n            alert('Ingresa un nombre')\r\n            return;\r\n        }\r\n        this.contactos.unshift({\r\n            nombre: this.state.nombre,\r\n            telefono: this.state.telefono,\r\n            programa: this.state.programa\r\n        })\r\n\r\n        localStorage.setItem('contactos', JSON.stringify(this.contactos))\r\n        this.props.history.goBack()\r\n\r\n    }\r\n\r\n    telefonoCambio = (t) => this.setState({ telefono: t.target.value })\r\n    nombreCambio = (t) => this.setState({ nombre: t.target.value })\r\n    programaCambio = (t) => this.setState({ programa: t.target.value })\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <p id=\"welcome\">Registrar un contacto</p>\r\n                <div id=\"inputBlock\">\r\n                    <p id=\"label\">Numero de teléfono</p>\r\n                    <input\r\n                        value={this.state.telefono}\r\n                        onChange={this.telefonoCambio}\r\n                        id=\"telefono\" class=\"inputText\" type=\"tel\" />\r\n                </div>\r\n\r\n                <div id=\"inputBlock\">\r\n                    <p id=\"label\">Nombre</p>\r\n\r\n                    <input\r\n                        value={this.state.nombre}\r\n                        onChange={this.nombreCambio}\r\n                        id=\"nombre\" class=\"inputText\" type=\"text\" />\r\n                </div>\r\n\r\n                <div id=\"inputBlock\">\r\n                    <p id=\"label\">Selecciona el programa</p>\r\n                    <select\r\n                        value={this.state.programa}\r\n                        onChange={this.programaCambio}\r\n                        id=\"programa\">\r\n                        <option value=\"22/22\">22/22</option>\r\n                        <option value=\"FAT40\">FAT40</option>\r\n                        <option value=\"U30\">U30</option>\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <button className=\"button\" onClick={this.back}>cancelar</button>\r\n                <button className=\"button\" onClick={this.registrar}>registrar</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Registrar);","import React from 'react';\nimport './style.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Home from './Home'\nimport Registrar from './Registrar'\n\nclass App extends React.Component {\n\n  componentDidMount() {\n\n  }\n  render() {\n    return (\n      <Router>\n        <p id=\"header\">Made with <span style={{ color: 'red' }}>❤</span> for you</p>\n\n        <div id=\"center\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/registrar\" component={Registrar} />\n          </Switch>\n        </div>\n\n\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}